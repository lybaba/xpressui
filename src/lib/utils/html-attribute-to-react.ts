const attributes = {
    accept: 'accept',
    ['accept-charset']: 'acceptCharset',
    accesskey: 'accessKey',
    action: 'action',
    alt: 'alt',
    async: 'async',
    autocomplete: 'autoComplete',
    autofocus: 'autoFocus',
    autoplay: 'autoPlay',
    charset: 'charSet',
    checked: 'checked',
    class: 'className',
    cols: 'cols',
    colspan: 'colSpan',
    content: 'content',
    contenteditable: 'contentEditable',
    controls: 'controls',
    coords: 'coords',
    data: 'data',
    datetime: 'dateTime',
    defer: 'defer',
    dir: 'dir',
    disabled: 'disabled',
    download: 'download',
    draggable: 'draggable',
    enctype: 'encType',
    for: 'htmlFor',
    form: 'form',
    formaction: 'formAction',
    headers: 'headers',
    height: 'height',
    hidden: 'hidden',
    high: 'high',
    href: 'href',
    hreflang: 'hrefLang',
    ['http-equiv']: 'httpEquiv',
    id: 'id',
    label: 'label',
    lang: 'lang',
    list: 'list',
    loop: 'loop',
    low: 'low',
    max: 'max',
    maxlength: 'maxLength',
    media: 'media',
    method: 'method',
    min: 'min',
    multiple: 'multiple',
    muted: 'muted',
    name: 'name',
    novalidate: 'noValidate',
    open: 'open',
    optimum: 'optimum',
    pattern: 'pattern',
    placeholder: 'placeholder',
    poster: 'poster',
    preload: 'preload',
    readonly: 'readOnly',
    rel: 'rel',
    required: 'required',
    rows: 'rows',
    rowspan: 'rowSpan',
    sandbox: 'sandbox',
    scope: 'scope',
    selected: 'selected',
    shape: 'shape',
    size: 'size',
    sizes: 'sizes',
    span: 'span',
    spellcheck: 'spellCheck',
    src: 'src',
    srcdoc: 'srcDoc',
    srcset: 'srcSet',
    start: 'start',
    step: 'step',
    style: 'style',
    tabindex: 'tabIndex',
    target: 'target',
    title: 'title',
    type: 'type',
    usemap: 'useMap',
    value: 'value',
    width: 'width',
    wrap: 'wrap',
    onabort: 'onAbort',
    onafterprint: 'onAfterPrint',
    onbeforeprint: 'onBeforePrint',
    onbeforeunload: 'onBeforeUnload',
    onblur: 'onBlur',
    oncanplay: 'onCanPlay',
    oncanplaythrough: 'onCanPlayThrough',
    onchange: 'onChange',
    onclick: 'onClick',
    oncontextmenu: 'onContextMenu',
    oncopy: 'onCopy',
    oncuechange: 'onCueChange',
    oncut: 'onCut',
    ondblclick: 'onDblClick',
    ondrag: 'onDrag',
    ondragend: 'onDragEnd',
    ondragenter: 'onDragEnter',
    ondragleave: 'onDragLeave',
    ondragover: 'onDragOver',
    ondragstart: 'onDragStart',
    ondrop: 'onDrop',
    ondurationchange: 'onDurationChange',
    onemptied: 'onEmptied',
    onended: 'onEnded',
    onerror: 'onError',
    onfocus: 'onFocus',
    onhashchange: 'onHashChange',
    oninput: 'onInput',
    oninvalid: 'onInvalid',
    onkeydown: 'onKeyDown',
    onkeypress: 'onKeyPress',
    onkeyup: 'onKeyUp',
    onload: 'onLoad',
    onloadeddata: 'onLoadedData',
    onloadedmetadata: 'onLoadedMetaData',
    onloadstart: 'onLoadStart',
    onmousedown: 'onMouseDown',
    onmousemove: 'onMouseMove',
    onmouseout: 'onMouseOut',
    onmouseover: 'onMouseOver',
    onmouseup: 'onMouseUp',
    onmousewheel: 'onMouseWheel',
    onoffline: 'onOffline',
    ononline: 'onOnline',
    onpagehide: 'onPageHide',
    onpageshow: 'onPageShow',
    onpaste: 'onPaste',
    onpause: 'onPause',
    onplay: 'onPlay',
    onplaying: 'onPlaying',
    onpopstate: 'onPopState',
    onprogress: 'onProgress',
    onratechange: 'onRateChange',
    onreset: 'onReset',
    onresize: 'onResize',
    onscroll: 'onScroll',
    onsearch: 'onSearch',
    onseeked: 'onSeeked',
    onseeking: 'onSeeking',
    onselect: 'onSelect',
    onstalled: 'onStalled',
    onstorage: 'onStorage',
    onsubmit: 'onSubmit',
    onsuspend: 'onSuspend',
    ontimeupdate: 'onTimeUpdate',
    ontoggle: 'onToggle',
    onunload: 'onUnload',
    onvolumechange: 'onVolumeChanged',
    onwaiting: 'onWaiting',
    onwheel: 'onWheel',
};

function htmlAttributeToReact(htmlAttribute: string) : string | undefined {
    type ObjectKey = keyof typeof attributes;
    const key = htmlAttribute as ObjectKey;

    return attributes[key];
}

export default htmlAttributeToReact;